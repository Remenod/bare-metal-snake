#pragma once

#include <lib/types.h>

/*****************************************************************************
VGA REGISTER DUMPS FOR VARIOUS TEXT MODES
*****************************************************************************/

static const uint8_t g_40x25_text[] =
    {
        /* MISC */
        0x67,
        /* SEQ */
        0x03, 0x08, 0x03, 0x00, 0x02,
        /* CRTC */
        0x2D, 0x27, 0x28, 0x90, 0x2B, 0xA0, 0xBF, 0x1F,
        0x00, 0x4F, 0x0D, 0x0E, 0x00, 0x00, 0x00, 0xA0,
        0x9C, 0x8E, 0x8F, 0x14, 0x1F, 0x96, 0xB9, 0xA3,
        0xFF,
        /* GC */
        0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x0E, 0x00,
        0xFF,
        /* AC */
        0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x14, 0x07,
        0x38, 0x39, 0x3A, 0x3B, 0x3C, 0x3D, 0x3E, 0x3F,
        0x0C, 0x00, 0x0F, 0x08, 0x00};

static const uint8_t g_40x50_text[] =
    {
        /* MISC */
        0x67,
        /* SEQ */
        0x03, 0x08, 0x03, 0x00, 0x02,
        /* CRTC */
        0x2D, 0x27, 0x28, 0x90, 0x2B, 0xA0, 0xBF, 0x1F,
        0x00, 0x47, 0x06, 0x07, 0x00, 0x00, 0x04, 0x60,
        0x9C, 0x8E, 0x8F, 0x14, 0x1F, 0x96, 0xB9, 0xA3,
        0xFF,
        /* GC */
        0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x0E, 0x00,
        0xFF,
        /* AC */
        0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x14, 0x07,
        0x38, 0x39, 0x3A, 0x3B, 0x3C, 0x3D, 0x3E, 0x3F,
        0x0C, 0x00, 0x0F, 0x08, 0x00};

static const uint8_t g_80x50_text[] =
    {
        /* MISC */
        0x67,
        /* SEQ */
        0x03, 0x00, 0x03, 0x00, 0x02,
        /* CRTC */
        0x5F, 0x4F, 0x50, 0x82, 0x55, 0x81, 0xBF, 0x1F,
        0x00, 0x47, 0x06, 0x07, 0x00, 0x00, 0x01, 0x40,
        0x9C, 0x8E, 0x8F, 0x28, 0x1F, 0x96, 0xB9, 0xA3,
        0xFF,
        /* GC */
        0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x0E, 0x00,
        0xFF,
        /* AC */
        0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x14, 0x07,
        0x38, 0x39, 0x3A, 0x3B, 0x3C, 0x3D, 0x3E, 0x3F,
        0x0C, 0x00, 0x0F, 0x08, 0x00};

static const uint8_t g_90x30_text[] =
    {
        /* MISC */
        0xE7,
        /* SEQ */
        0x03, 0x01, 0x03, 0x00, 0x02,
        /* CRTC */
        0x6B, 0x59, 0x5A, 0x82, 0x60, 0x8D, 0x0B, 0x3E,
        0x00, 0x4F, 0x0D, 0x0E, 0x00, 0x00, 0x00, 0x00,
        0xEA, 0x0C, 0xDF, 0x2D, 0x10, 0xE8, 0x05, 0xA3,
        0xFF,
        /* GC */
        0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x0E, 0x00,
        0xFF,
        /* AC */
        0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x14, 0x07,
        0x38, 0x39, 0x3A, 0x3B, 0x3C, 0x3D, 0x3E, 0x3F,
        0x0C, 0x00, 0x0F, 0x08, 0x00};

static const uint8_t g_90x60_text[] =
    {
        /* MISC */
        0xE7,
        /* SEQ */
        0x03, 0x01, 0x03, 0x00, 0x02,
        /* CRTC */
        0x6B, 0x59, 0x5A, 0x82, 0x60, 0x8D, 0x0B, 0x3E,
        0x00, 0x47, 0x06, 0x07, 0x00, 0x00, 0x00, 0x00,
        0xEA, 0x0C, 0xDF, 0x2D, 0x08, 0xE8, 0x05, 0xA3,
        0xFF,
        /* GC */
        0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x0E, 0x00,
        0xFF,
        /* AC */
        0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x14, 0x07,
        0x38, 0x39, 0x3A, 0x3B, 0x3C, 0x3D, 0x3E, 0x3F,
        0x0C, 0x00, 0x0F, 0x08, 0x00};

/*****************************************************************************
VGA REGISTER DUMPS FOR VARIOUS GRAPHICS MODES
*****************************************************************************/

static const uint8_t g_640x480x2[] =
    {
        /* MISC */
        0xE3,
        /* SEQ */
        0x03, 0x01, 0x0F, 0x00, 0x06,
        /* CRTC */
        0x5F, 0x4F, 0x50, 0x82, 0x54, 0x80, 0x0B, 0x3E,
        0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0xEA, 0x0C, 0xDF, 0x28, 0x00, 0xE7, 0x04, 0xE3,
        0xFF,
        /* GC */
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x0F,
        0xFF,
        /* AC */
        0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x14, 0x07,
        0x38, 0x39, 0x3A, 0x3B, 0x3C, 0x3D, 0x3E, 0x3F,
        0x01, 0x00, 0x0F, 0x00, 0x00};
/*****************************************************************************
*** NOTE: the mode described by g_320x200x4[]
is different from BIOS mode 05h in two ways:
- Framebuffer is at A000:0000 instead of B800:0000
- Framebuffer is linear (no screwy line-by-line CGA addressing)
*****************************************************************************/
static const uint8_t g_320x200x4[] =
    {
        /* MISC */
        0x63,
        /* SEQ */
        0x03, 0x09, 0x03, 0x00, 0x02,
        /* CRTC */
        0x2D, 0x27, 0x28, 0x90, 0x2B, 0x80, 0xBF, 0x1F,
        0x00, 0x41, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x9C, 0x0E, 0x8F, 0x14, 0x00, 0x96, 0xB9, 0xA3,
        0xFF,
        /* GC */
        0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x02, 0x00,
        0xFF,
        /* AC */
        0x00, 0x13, 0x15, 0x17, 0x02, 0x04, 0x06, 0x07,
        0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17,
        0x01, 0x00, 0x03, 0x00, 0x00};

static const uint8_t g_640x480x16[] =
    {
        /* MISC */
        0xE3,
        /* SEQ */
        0x03, 0x01, 0x08, 0x00, 0x06,
        /* CRTC */
        0x5F, 0x4F, 0x50, 0x82, 0x54, 0x80, 0x0B, 0x3E,
        0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0xEA, 0x0C, 0xDF, 0x28, 0x00, 0xE7, 0x04, 0xE3,
        0xFF,
        /* GC */
        0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x05, 0x0F,
        0xFF,
        /* AC */
        0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x14, 0x07,
        0x38, 0x39, 0x3A, 0x3B, 0x3C, 0x3D, 0x3E, 0x3F,
        0x01, 0x00, 0x0F, 0x00, 0x00};

static const uint8_t g_720x480x16[] =
    {
        /* MISC */
        0xE7,
        /* SEQ */
        0x03, 0x01, 0x08, 0x00, 0x06,
        /* CRTC */
        0x6B, 0x59, 0x5A, 0x82, 0x60, 0x8D, 0x0B, 0x3E,
        0x00, 0x40, 0x06, 0x07, 0x00, 0x00, 0x00, 0x00,
        0xEA, 0x0C, 0xDF, 0x2D, 0x08, 0xE8, 0x05, 0xE3,
        0xFF,
        /* GC */
        0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x05, 0x0F,
        0xFF,
        /* AC */
        0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07,
        0x08, 0x09, 0x0A, 0x0B, 0x0C, 0x0D, 0x0E, 0x0F,
        0x01, 0x00, 0x0F, 0x00, 0x00};

static const uint8_t g_320x200x256_modex[] =
    {
        /* MISC */
        0x63,
        /* SEQ */
        0x03, 0x01, 0x0F, 0x00, 0x06,
        /* CRTC */
        0x5F, 0x4F, 0x50, 0x82, 0x54, 0x80, 0xBF, 0x1F,
        0x00, 0x41, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x9C, 0x0E, 0x8F, 0x28, 0x00, 0x96, 0xB9, 0xE3,
        0xFF,
        /* GC */
        0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x05, 0x0F,
        0xFF,
        /* AC */
        0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07,
        0x08, 0x09, 0x0A, 0x0B, 0x0C, 0x0D, 0x0E, 0x0F,
        0x41, 0x00, 0x0F, 0x00, 0x00};

/*****************************************************************************
FONTS
*****************************************************************************/

static const uint8_t g_8x8_font[256][8] __attribute__((aligned(16), section(".rodata"))) =
    {
        {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},  // 000 0x00 ␀
        {0x7E, 0x81, 0xA5, 0x81, 0xBD, 0x99, 0x81, 0x7E},  // 001 0x01 ☺
        {0x7E, 0xFF, 0xDB, 0xFF, 0xC3, 0xE7, 0xFF, 0x7E},  // 002 0x02 ☻
        {0x6C, 0xFE, 0xFE, 0xFE, 0x7C, 0x38, 0x10, 0x00},  // 003 0x03 ♥
        {0x10, 0x38, 0x7C, 0xFE, 0x7C, 0x38, 0x10, 0x00},  // 004 0x04 ♦
        {0x38, 0x7C, 0x38, 0xFE, 0xFE, 0x92, 0x10, 0x7C},  // 005 0x05 ♣
        {0x00, 0x10, 0x38, 0x7C, 0xFE, 0x7C, 0x38, 0x7C},  // 006 0x06 ♠
        {0x00, 0x00, 0x18, 0x3C, 0x3C, 0x18, 0x00, 0x00},  // 007 0x07 •
        {0xFF, 0xFF, 0xE7, 0xC3, 0xC3, 0xE7, 0xFF, 0xFF},  // 008 0x08 ◘
        {0x00, 0x3C, 0x66, 0x42, 0x42, 0x66, 0x3C, 0x00},  // 009 0x09 ○
        {0xFF, 0xC3, 0x99, 0xBD, 0xBD, 0x99, 0xC3, 0xFF},  // 010 0x0A ◙
        {0x0F, 0x07, 0x0F, 0x7D, 0xCC, 0xCC, 0xCC, 0x78},  // 011 0x0B ♂
        {0x3C, 0x66, 0x66, 0x66, 0x3C, 0x18, 0x7E, 0x18},  // 012 0x0C ♀
        {0x3F, 0x33, 0x3F, 0x30, 0x30, 0x70, 0xF0, 0xE0},  // 013 0x0D ♪
        {0x7F, 0x63, 0x7F, 0x63, 0x63, 0x67, 0xE6, 0xC0},  // 014 0x0E ♫
        {0x99, 0x5A, 0x3C, 0xE7, 0xE7, 0x3C, 0x5A, 0x99},  // 015 0x0F ☼
        {0x80, 0xE0, 0xF8, 0xFE, 0xF8, 0xE0, 0x80, 0x00},  // 016 0x10 ►
        {0x02, 0x0E, 0x3E, 0xFE, 0x3E, 0x0E, 0x02, 0x00},  // 017 0x11 ◄
        {0x18, 0x3C, 0x7E, 0x18, 0x18, 0x7E, 0x3C, 0x18},  // 018 0x12 ↕
        {0x66, 0x66, 0x66, 0x66, 0x66, 0x00, 0x66, 0x00},  // 019 0x13 ‼
        {0x7F, 0xDB, 0xDB, 0x7B, 0x1B, 0x1B, 0x1B, 0x00},  // 020 0x14 ¶
        {0x3E, 0x63, 0x38, 0x6C, 0x6C, 0x38, 0x86, 0xFC},  // 021 0x15 §
        {0x00, 0x00, 0x00, 0x00, 0x7E, 0x7E, 0x7E, 0x00},  // 022 0x16 ▬
        {0x18, 0x3C, 0x7E, 0x18, 0x7E, 0x3C, 0x18, 0xFF},  // 023 0x17 ↨
        {0x18, 0x3C, 0x7E, 0x18, 0x18, 0x18, 0x18, 0x00},  // 024 0x18 ↑
        {0x18, 0x18, 0x18, 0x18, 0x7E, 0x3C, 0x18, 0x00},  // 025 0x19 ↓
        {0x00, 0x18, 0x0C, 0xFE, 0x0C, 0x18, 0x00, 0x00},  // 026 0x1A →
        {0x00, 0x30, 0x60, 0xFE, 0x60, 0x30, 0x00, 0x00},  // 027 0x1B ←
        {0x00, 0x00, 0xC0, 0xC0, 0xC0, 0xFE, 0x00, 0x00},  // 028 0x1C ∟
        {0x00, 0x24, 0x66, 0xFF, 0x66, 0x24, 0x00, 0x00},  // 029 0x1D ↔
        {0x00, 0x18, 0x3C, 0x7E, 0xFF, 0xFF, 0x00, 0x00},  // 030 0x1E ▲
        {0x00, 0xFF, 0xFF, 0x7E, 0x3C, 0x18, 0x00, 0x00},  // 031 0x1F ▼
        {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},  // 032 0x20 ' '
        {0x18, 0x3C, 0x3C, 0x18, 0x18, 0x00, 0x18, 0x00},  // 033 0x21 '!'
        {0x6C, 0x6C, 0x6C, 0x00, 0x00, 0x00, 0x00, 0x00},  // 034 0x22 '"'
        {0x6C, 0x6C, 0xFE, 0x6C, 0xFE, 0x6C, 0x6C, 0x00},  // 035 0x23 '#'
        {0x18, 0x7E, 0xC0, 0x7C, 0x06, 0xFC, 0x18, 0x00},  // 036 0x24 '$'
        {0x00, 0xC6, 0xCC, 0x18, 0x30, 0x66, 0xC6, 0x00},  // 037 0x25 '%'
        {0x38, 0x6C, 0x38, 0x76, 0xDC, 0xCC, 0x76, 0x00},  // 038 0x26 '&'
        {0x30, 0x30, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00},  // 039 0x27 '''
        {0x18, 0x30, 0x60, 0x60, 0x60, 0x30, 0x18, 0x00},  // 040 0x28 '('
        {0x60, 0x30, 0x18, 0x18, 0x18, 0x30, 0x60, 0x00},  // 041 0x29 ')'
        {0x00, 0x66, 0x3C, 0xFF, 0x3C, 0x66, 0x00, 0x00},  // 042 0x2A '*'
        {0x00, 0x18, 0x18, 0x7E, 0x18, 0x18, 0x00, 0x00},  // 043 0x2B '+'
        {0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x18, 0x30},  // 044 0x2C ','
        {0x00, 0x00, 0x00, 0x7E, 0x00, 0x00, 0x00, 0x00},  // 045 0x2D '-'
        {0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x18, 0x00},  // 046 0x2E '.'
        {0x06, 0x0C, 0x18, 0x30, 0x60, 0xC0, 0x80, 0x00},  // 047 0x2F '/'
        {0x7C, 0xCE, 0xDE, 0xF6, 0xE6, 0xC6, 0x7C, 0x00},  // 048 0x30 '0'
        {0x30, 0x70, 0x30, 0x30, 0x30, 0x30, 0xFC, 0x00},  // 049 0x31 '1'
        {0x78, 0xCC, 0x0C, 0x38, 0x60, 0xCC, 0xFC, 0x00},  // 050 0x32 '2'
        {0x78, 0xCC, 0x0C, 0x38, 0x0C, 0xCC, 0x78, 0x00},  // 051 0x33 '3'
        {0x1C, 0x3C, 0x6C, 0xCC, 0xFE, 0x0C, 0x1E, 0x00},  // 052 0x34 '4'
        {0xFC, 0xC0, 0xF8, 0x0C, 0x0C, 0xCC, 0x78, 0x00},  // 053 0x35 '5'
        {0x38, 0x60, 0xC0, 0xF8, 0xCC, 0xCC, 0x78, 0x00},  // 054 0x36 '6'
        {0xFC, 0xCC, 0x0C, 0x18, 0x30, 0x30, 0x30, 0x00},  // 055 0x37 '7'
        {0x78, 0xCC, 0xCC, 0x78, 0xCC, 0xCC, 0x78, 0x00},  // 056 0x38 '8'
        {0x78, 0xCC, 0xCC, 0x7C, 0x0C, 0x18, 0x70, 0x00},  // 057 0x39 '9'
        {0x00, 0x18, 0x18, 0x00, 0x00, 0x18, 0x18, 0x00},  // 058 0x3A ':'
        {0x00, 0x18, 0x18, 0x00, 0x00, 0x18, 0x18, 0x30},  // 059 0x3B ';'
        {0x18, 0x30, 0x60, 0xC0, 0x60, 0x30, 0x18, 0x00},  // 060 0x3C '<'
        {0x00, 0x00, 0x7E, 0x00, 0x7E, 0x00, 0x00, 0x00},  // 061 0x3D '='
        {0x60, 0x30, 0x18, 0x0C, 0x18, 0x30, 0x60, 0x00},  // 062 0x3E '>'
        {0x3C, 0x66, 0x0C, 0x18, 0x18, 0x00, 0x18, 0x00},  // 063 0x3F '?'
        {0x7C, 0xC6, 0xDE, 0xDE, 0xDC, 0xC0, 0x7C, 0x00},  // 064 0x40 '@'
        {0x30, 0x78, 0xCC, 0xCC, 0xFC, 0xCC, 0xCC, 0x00},  // 065 0x41 'A'
        {0xFC, 0x66, 0x66, 0x7C, 0x66, 0x66, 0xFC, 0x00},  // 066 0x42 'B'
        {0x3C, 0x66, 0xC0, 0xC0, 0xC0, 0x66, 0x3C, 0x00},  // 067 0x43 'C'
        {0xF8, 0x6C, 0x66, 0x66, 0x66, 0x6C, 0xF8, 0x00},  // 068 0x44 'D'
        {0xFE, 0x62, 0x68, 0x78, 0x68, 0x62, 0xFE, 0x00},  // 069 0x45 'E'
        {0xFE, 0x62, 0x68, 0x78, 0x68, 0x60, 0xF0, 0x00},  // 070 0x46 'F'
        {0x3C, 0x66, 0xC0, 0xC0, 0xCE, 0x66, 0x3A, 0x00},  // 071 0x47 'G'
        {0xCC, 0xCC, 0xCC, 0xFC, 0xCC, 0xCC, 0xCC, 0x00},  // 072 0x48 'H'
        {0x78, 0x30, 0x30, 0x30, 0x30, 0x30, 0x78, 0x00},  // 073 0x49 'I'
        {0x1E, 0x0C, 0x0C, 0x0C, 0xCC, 0xCC, 0x78, 0x00},  // 074 0x4A 'J'
        {0xE6, 0x66, 0x6C, 0x78, 0x6C, 0x66, 0xE6, 0x00},  // 075 0x4B 'K'
        {0xF0, 0x60, 0x60, 0x60, 0x62, 0x66, 0xFE, 0x00},  // 076 0x4C 'L'
        {0xC6, 0xEE, 0xFE, 0xFE, 0xD6, 0xC6, 0xC6, 0x00},  // 077 0x4D 'M'
        {0xC6, 0xE6, 0xF6, 0xDE, 0xCE, 0xC6, 0xC6, 0x00},  // 078 0x4E 'N'
        {0x38, 0x6C, 0xC6, 0xC6, 0xC6, 0x6C, 0x38, 0x00},  // 079 0x4F 'O'
        {0xFC, 0x66, 0x66, 0x7C, 0x60, 0x60, 0xF0, 0x00},  // 080 0x50 'P'
        {0x7C, 0xC6, 0xC6, 0xC6, 0xD6, 0x7C, 0x0E, 0x00},  // 081 0x51 'Q'
        {0xFC, 0x66, 0x66, 0x7C, 0x6C, 0x66, 0xE6, 0x00},  // 082 0x52 'R'
        {0x7C, 0xC6, 0xE0, 0x78, 0x0E, 0xC6, 0x7C, 0x00},  // 083 0x53 'S'
        {0xFC, 0xB4, 0x30, 0x30, 0x30, 0x30, 0x78, 0x00},  // 084 0x54 'T'
        {0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xFC, 0x00},  // 085 0x55 'U'
        {0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0x78, 0x30, 0x00},  // 086 0x56 'V'
        {0xC6, 0xC6, 0xC6, 0xC6, 0xD6, 0xFE, 0x6C, 0x00},  // 087 0x57 'W'
        {0xC6, 0xC6, 0x6C, 0x38, 0x6C, 0xC6, 0xC6, 0x00},  // 088 0x58 'X'
        {0xCC, 0xCC, 0xCC, 0x78, 0x30, 0x30, 0x78, 0x00},  // 089 0x59 'Y'
        {0xFE, 0xC6, 0x8C, 0x18, 0x32, 0x66, 0xFE, 0x00},  // 090 0x5A 'Z'
        {0x78, 0x60, 0x60, 0x60, 0x60, 0x60, 0x78, 0x00},  // 091 0x5B '['
        {0xC0, 0x60, 0x30, 0x18, 0x0C, 0x06, 0x02, 0x00},  // 092 0x5C '\'
        {0x78, 0x18, 0x18, 0x18, 0x18, 0x18, 0x78, 0x00},  // 093 0x5D ']'
        {0x10, 0x38, 0x6C, 0xC6, 0x00, 0x00, 0x00, 0x00},  // 094 0x5E '^'
        {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF},  // 095 0x5F '_'
        {0x30, 0x30, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00},  // 096 0x60 '`'
        {0x00, 0x00, 0x78, 0x0C, 0x7C, 0xCC, 0x76, 0x00},  // 097 0x61 'a'
        {0xE0, 0x60, 0x60, 0x7C, 0x66, 0x66, 0xDC, 0x00},  // 098 0x62 'b'
        {0x00, 0x00, 0x78, 0xCC, 0xC0, 0xCC, 0x78, 0x00},  // 099 0x63 'c'
        {0x1C, 0x0C, 0x0C, 0x7C, 0xCC, 0xCC, 0x76, 0x00},  // 100 0x64 'd'
        {0x00, 0x00, 0x78, 0xCC, 0xFC, 0xC0, 0x78, 0x00},  // 101 0x65 'e'
        {0x38, 0x6C, 0x64, 0xF0, 0x60, 0x60, 0xF0, 0x00},  // 102 0x66 'f'
        {0x00, 0x00, 0x76, 0xCC, 0xCC, 0x7C, 0x0C, 0xF8},  // 103 0x67 'g'
        {0xE0, 0x60, 0x6C, 0x76, 0x66, 0x66, 0xE6, 0x00},  // 104 0x68 'h'
        {0x30, 0x00, 0x70, 0x30, 0x30, 0x30, 0x78, 0x00},  // 105 0x69 'i'
        {0x0C, 0x00, 0x1C, 0x0C, 0x0C, 0xCC, 0xCC, 0x78},  // 106 0x6A 'j'
        {0xE0, 0x60, 0x66, 0x6C, 0x78, 0x6C, 0xE6, 0x00},  // 107 0x6B 'k'
        {0x70, 0x30, 0x30, 0x30, 0x30, 0x30, 0x78, 0x00},  // 108 0x6C 'l'
        {0x00, 0x00, 0xCC, 0xFE, 0xFE, 0xD6, 0xD6, 0x00},  // 109 0x6D 'm'
        {0x00, 0x00, 0xB8, 0xCC, 0xCC, 0xCC, 0xCC, 0x00},  // 110 0x6E 'n'
        {0x00, 0x00, 0x78, 0xCC, 0xCC, 0xCC, 0x78, 0x00},  // 111 0x6F 'o'
        {0x00, 0x00, 0xDC, 0x66, 0x66, 0x7C, 0x60, 0xF0},  // 112 0x70 'p'
        {0x00, 0x00, 0x76, 0xCC, 0xCC, 0x7C, 0x0C, 0x1E},  // 113 0x71 'q'
        {0x00, 0x00, 0xDC, 0x76, 0x62, 0x60, 0xF0, 0x00},  // 114 0x72 'r'
        {0x00, 0x00, 0x7C, 0xC0, 0x70, 0x1C, 0xF8, 0x00},  // 115 0x73 's'
        {0x10, 0x30, 0xFC, 0x30, 0x30, 0x34, 0x18, 0x00},  // 116 0x74 't'
        {0x00, 0x00, 0xCC, 0xCC, 0xCC, 0xCC, 0x76, 0x00},  // 117 0x75 'u'
        {0x00, 0x00, 0xCC, 0xCC, 0xCC, 0x78, 0x30, 0x00},  // 118 0x76 'v'
        {0x00, 0x00, 0xC6, 0xC6, 0xD6, 0xFE, 0x6C, 0x00},  // 119 0x77 'w'
        {0x00, 0x00, 0xC6, 0x6C, 0x38, 0x6C, 0xC6, 0x00},  // 120 0x78 'x'
        {0x00, 0x00, 0xCC, 0xCC, 0xCC, 0x7C, 0x0C, 0xF8},  // 121 0x79 'y'
        {0x00, 0x00, 0xFC, 0x98, 0x30, 0x64, 0xFC, 0x00},  // 122 0x7A 'z'
        {0x1C, 0x30, 0x30, 0xE0, 0x30, 0x30, 0x1C, 0x00},  // 123 0x7B '{'
        {0x18, 0x18, 0x18, 0x00, 0x18, 0x18, 0x18, 0x00},  // 124 0x7C '|'
        {0xE0, 0x30, 0x30, 0x1C, 0x30, 0x30, 0xE0, 0x00},  // 125 0x7D '}'
        {0x76, 0xDC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},  // 126 0x7E '~'
        {0x00, 0x10, 0x38, 0x6C, 0xC6, 0xC6, 0xFE, 0x00},  // 127 0x7F ⌂
        {0x7C, 0xC6, 0xC0, 0xC6, 0x7C, 0x0C, 0x06, 0x7C},  // 128 0x80 Ç
        {0x00, 0xCC, 0x00, 0xCC, 0xCC, 0xCC, 0x76, 0x00},  // 129 0x81 ü
        {0x1C, 0x00, 0x78, 0xCC, 0xFC, 0xC0, 0x78, 0x00},  // 130 0x82 é
        {0x7E, 0x81, 0x3C, 0x06, 0x3E, 0x66, 0x3B, 0x00},  // 131 0x83 â
        {0xCC, 0x00, 0x78, 0x0C, 0x7C, 0xCC, 0x76, 0x00},  // 132 0x84 ä
        {0xE0, 0x00, 0x78, 0x0C, 0x7C, 0xCC, 0x76, 0x00},  // 133 0x85 à
        {0x30, 0x30, 0x78, 0x0C, 0x7C, 0xCC, 0x76, 0x00},  // 134 0x86 å
        {0x00, 0x00, 0x7C, 0xC6, 0xC0, 0x78, 0x0C, 0x38},  // 135 0x87 ç
        {0x7E, 0x81, 0x3C, 0x66, 0x7E, 0x60, 0x3C, 0x00},  // 136 0x88 ê
        {0xCC, 0x00, 0x78, 0xCC, 0xFC, 0xC0, 0x78, 0x00},  // 137 0x89 ë
        {0xE0, 0x00, 0x78, 0xCC, 0xFC, 0xC0, 0x78, 0x00},  // 138 0x8A è
        {0xCC, 0x00, 0x70, 0x30, 0x30, 0x30, 0x78, 0x00},  // 139 0x8B ï
        {0x7C, 0x82, 0x38, 0x18, 0x18, 0x18, 0x3C, 0x00},  // 140 0x8C î
        {0xE0, 0x00, 0x70, 0x30, 0x30, 0x30, 0x78, 0x00},  // 141 0x8D ì
        {0xC6, 0x10, 0x7C, 0xC6, 0xFE, 0xC6, 0xC6, 0x00},  // 142 0x8E Ä
        {0x30, 0x30, 0x00, 0x78, 0xCC, 0xFC, 0xCC, 0x00},  // 143 0x8F Å
        {0x1C, 0x00, 0xFC, 0x60, 0x78, 0x60, 0xFC, 0x00},  // 144 0x90 É
        {0x00, 0x00, 0x7F, 0x0C, 0x7F, 0xCC, 0x7F, 0x00},  // 145 0x91 æ
        {0x3E, 0x6C, 0xCC, 0xFE, 0xCC, 0xCC, 0xCE, 0x00},  // 146 0x92 Æ
        {0x78, 0x84, 0x00, 0x78, 0xCC, 0xCC, 0x78, 0x00},  // 147 0x93 ô
        {0x00, 0xCC, 0x00, 0x78, 0xCC, 0xCC, 0x78, 0x00},  // 148 0x94 ö
        {0x00, 0xE0, 0x00, 0x78, 0xCC, 0xCC, 0x78, 0x00},  // 149 0x95 ò
        {0x78, 0x84, 0x00, 0xCC, 0xCC, 0xCC, 0x76, 0x00},  // 150 0x96 û
        {0x00, 0xE0, 0x00, 0xCC, 0xCC, 0xCC, 0x76, 0x00},  // 151 0x97 ù
        {0x00, 0xCC, 0x00, 0xCC, 0xCC, 0x7C, 0x0C, 0xF8},  // 152 0x98 ÿ
        {0xC3, 0x18, 0x3C, 0x66, 0x66, 0x3C, 0x18, 0x00},  // 153 0x99 Ö
        {0xCC, 0x00, 0xCC, 0xCC, 0xCC, 0xCC, 0x78, 0x00},  // 154 0x9A Ü
        {0x18, 0x18, 0x7E, 0xC0, 0xC0, 0x7E, 0x18, 0x18},  // 155 0x9B ¢
        {0x38, 0x6C, 0x64, 0xF0, 0x60, 0xE6, 0xFC, 0x00},  // 156 0x9C £
        {0xCC, 0xCC, 0x78, 0x30, 0xFC, 0x30, 0xFC, 0x30},  // 157 0x9D ¥
        {0xF8, 0xCC, 0xCC, 0xFA, 0xC6, 0xCF, 0xC6, 0xC3},  // 158 0x9E ₧
        {0x0E, 0x1B, 0x18, 0x3C, 0x18, 0x18, 0xD8, 0x70},  // 159 0x9F ƒ
        {0x1C, 0x00, 0x78, 0x0C, 0x7C, 0xCC, 0x76, 0x00},  // 160 0xA0 á
        {0x38, 0x00, 0x70, 0x30, 0x30, 0x30, 0x78, 0x00},  // 161 0xA1 í
        {0x00, 0x1C, 0x00, 0x78, 0xCC, 0xCC, 0x78, 0x00},  // 162 0xA2 ó
        {0x00, 0x1C, 0x00, 0xCC, 0xCC, 0xCC, 0x76, 0x00},  // 163 0xA3 ú
        {0x00, 0xF8, 0x00, 0xB8, 0xCC, 0xCC, 0xCC, 0x00},  // 164 0xA4 ñ
        {0xFC, 0x00, 0xCC, 0xEC, 0xFC, 0xDC, 0xCC, 0x00},  // 165 0xA5 Ñ
        {0x3C, 0x6C, 0x6C, 0x3E, 0x00, 0x7E, 0x00, 0x00},  // 166 0xA6 ª
        {0x38, 0x6C, 0x6C, 0x38, 0x00, 0x7C, 0x00, 0x00},  // 167 0xA7 º
        {0x18, 0x00, 0x18, 0x18, 0x30, 0x66, 0x3C, 0x00},  // 168 0xA8 ¿
        {0x00, 0x00, 0x00, 0xFC, 0xC0, 0xC0, 0x00, 0x00},  // 169 0xA9 ⌐
        {0x00, 0x00, 0x00, 0xFC, 0x0C, 0x0C, 0x00, 0x00},  // 170 0xAA ¬
        {0xC6, 0xCC, 0xD8, 0x36, 0x6B, 0xC2, 0x84, 0x0F},  // 171 0xAB ½
        {0xC3, 0xC6, 0xCC, 0xDB, 0x37, 0x6D, 0xCF, 0x03},  // 172 0xAC ¼
        {0x18, 0x00, 0x18, 0x18, 0x3C, 0x3C, 0x18, 0x00},  // 173 0xAD ¡
        {0x00, 0x33, 0x66, 0xCC, 0x66, 0x33, 0x00, 0x00},  // 174 0xAE «
        {0x00, 0xCC, 0x66, 0x33, 0x66, 0xCC, 0x00, 0x00},  // 175 0xAF »
        {0x22, 0x88, 0x22, 0x88, 0x22, 0x88, 0x22, 0x88},  // 176 0xB0 ░
        {0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA},  // 177 0xB1 ▒
        {0xDB, 0xF6, 0xDB, 0x6F, 0xDB, 0x7E, 0xD7, 0xED},  // 178 0xB2 ▓
        {0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18},  // 179 0xB3 │
        {0x18, 0x18, 0x18, 0x18, 0xF8, 0x18, 0x18, 0x18},  // 180 0xB4 ┤
        {0x18, 0x18, 0xF8, 0x18, 0xF8, 0x18, 0x18, 0x18},  // 181 0xB5 ╡
        {0x36, 0x36, 0x36, 0x36, 0xF6, 0x36, 0x36, 0x36},  // 182 0xB6 ╢
        {0x00, 0x00, 0x00, 0x00, 0xFE, 0x36, 0x36, 0x36},  // 183 0xB7 ╖
        {0x00, 0x00, 0xF8, 0x18, 0xF8, 0x18, 0x18, 0x18},  // 184 0xB8 ╕
        {0x36, 0x36, 0xF6, 0x06, 0xF6, 0x36, 0x36, 0x36},  // 185 0xB9 ╣
        {0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36},  // 186 0xBA ║
        {0x00, 0x00, 0xFE, 0x06, 0xF6, 0x36, 0x36, 0x36},  // 187 0xBB ╗
        {0x36, 0x36, 0xF6, 0x06, 0xFE, 0x00, 0x00, 0x00},  // 188 0xBC ╝
        {0x36, 0x36, 0x36, 0x36, 0xFE, 0x00, 0x00, 0x00},  // 189 0xBD ╜
        {0x18, 0x18, 0xF8, 0x18, 0xF8, 0x00, 0x00, 0x00},  // 190 0xBE ╛
        {0x00, 0x00, 0x00, 0x00, 0xF8, 0x18, 0x18, 0x18},  // 191 0xBF ┐
        {0x18, 0x18, 0x18, 0x18, 0x1F, 0x00, 0x00, 0x00},  // 192 0xC0 └
        {0x18, 0x18, 0x18, 0x18, 0xFF, 0x00, 0x00, 0x00},  // 193 0xC1 ┴
        {0x00, 0x00, 0x00, 0x00, 0xFF, 0x18, 0x18, 0x18},  // 194 0xC2 ┬
        {0x18, 0x18, 0x18, 0x18, 0x1F, 0x18, 0x18, 0x18},  // 195 0xC3 ├
        {0x00, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00},  // 196 0xC4 ─
        {0x18, 0x18, 0x18, 0x18, 0xFF, 0x18, 0x18, 0x18},  // 197 0xC5 ┼
        {0x18, 0x18, 0x1F, 0x18, 0x1F, 0x18, 0x18, 0x18},  // 198 0xC6 ╞
        {0x36, 0x36, 0x36, 0x36, 0x37, 0x36, 0x36, 0x36},  // 199 0xC7 ╟
        {0x36, 0x36, 0x37, 0x30, 0x3F, 0x00, 0x00, 0x00},  // 200 0xC8 ╚
        {0x00, 0x00, 0x3F, 0x30, 0x37, 0x36, 0x36, 0x36},  // 201 0xC9 ╔
        {0x36, 0x36, 0xF7, 0x00, 0xFF, 0x00, 0x00, 0x00},  // 202 0xCA ╩
        {0x00, 0x00, 0xFF, 0x00, 0xF7, 0x36, 0x36, 0x36},  // 203 0xCB ╦
        {0x36, 0x36, 0x37, 0x30, 0x37, 0x36, 0x36, 0x36},  // 204 0xCC ╠
        {0x00, 0x00, 0xFF, 0x00, 0xFF, 0x00, 0x00, 0x00},  // 205 0xCD ═
        {0x36, 0x36, 0xF7, 0x00, 0xF7, 0x36, 0x36, 0x36},  // 206 0xCE ╬
        {0x18, 0x18, 0xFF, 0x00, 0xFF, 0x00, 0x00, 0x00},  // 207 0xCF ╧
        {0x36, 0x36, 0x36, 0x36, 0xFF, 0x00, 0x00, 0x00},  // 208 0xD0 ╨
        {0x00, 0x00, 0xFF, 0x00, 0xFF, 0x18, 0x18, 0x18},  // 209 0xD1 ╤
        {0x00, 0x00, 0x00, 0x00, 0xFF, 0x36, 0x36, 0x36},  // 210 0xD2 ╥
        {0x36, 0x36, 0x36, 0x36, 0x3F, 0x00, 0x00, 0x00},  // 211 0xD3 ╙
        {0x18, 0x18, 0x1F, 0x18, 0x1F, 0x00, 0x00, 0x00},  // 212 0xD4 ╘
        {0x00, 0x00, 0x1F, 0x18, 0x1F, 0x18, 0x18, 0x18},  // 213 0xD5 ╒
        {0x00, 0x00, 0x00, 0x00, 0x3F, 0x36, 0x36, 0x36},  // 214 0xD6 ╓
        {0x36, 0x36, 0x36, 0x36, 0xFF, 0x36, 0x36, 0x36},  // 215 0xD7 ╫
        {0x18, 0x18, 0xFF, 0x18, 0xFF, 0x18, 0x18, 0x18},  // 216 0xD8 ╪
        {0x18, 0x18, 0x18, 0x18, 0xF8, 0x00, 0x00, 0x00},  // 217 0xD9 ┘
        {0x00, 0x00, 0x00, 0x00, 0x1F, 0x18, 0x18, 0x18},  // 218 0xDA ┌
        {0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF},  // 219 0xDB █
        {0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF},  // 220 0xDC ▄
        {0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0},  // 221 0xDD ▌
        {0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F},  // 222 0xDE ▐
        {0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00},  // 223 0xDF ▀
        {0x00, 0x00, 0x76, 0xDC, 0xC8, 0xDC, 0x76, 0x00},  // 224 0xE0 α
        {0x00, 0x78, 0xCC, 0xF8, 0xCC, 0xF8, 0xC0, 0xC0},  // 225 0xE1 ß
        {0x00, 0xFC, 0xCC, 0xC0, 0xC0, 0xC0, 0xC0, 0x00},  // 226 0xE2 Γ
        {0x00, 0x00, 0xFE, 0x6C, 0x6C, 0x6C, 0x6C, 0x00},  // 227 0xE3 π
        {0xFC, 0xCC, 0x60, 0x30, 0x60, 0xCC, 0xFC, 0x00},  // 228 0xE4 Σ
        {0x00, 0x00, 0x7E, 0xD8, 0xD8, 0xD8, 0x70, 0x00},  // 229 0xE5 σ
        {0x00, 0x66, 0x66, 0x66, 0x66, 0x7C, 0x60, 0xC0},  // 230 0xE6 µ
        {0x00, 0x76, 0xDC, 0x18, 0x18, 0x18, 0x18, 0x00},  // 231 0xE7 τ
        {0xFC, 0x30, 0x78, 0xCC, 0xCC, 0x78, 0x30, 0xFC},  // 232 0xE8 Φ
        {0x38, 0x6C, 0xC6, 0xFE, 0xC6, 0x6C, 0x38, 0x00},  // 233 0xE9 Θ
        {0x38, 0x6C, 0xC6, 0xC6, 0x6C, 0x6C, 0xEE, 0x00},  // 234 0xEA Ω
        {0x1C, 0x30, 0x18, 0x7C, 0xCC, 0xCC, 0x78, 0x00},  // 235 0xEB δ
        {0x00, 0x00, 0x7E, 0xDB, 0xDB, 0x7E, 0x00, 0x00},  // 236 0xEC ∞
        {0x06, 0x0C, 0x7E, 0xDB, 0xDB, 0x7E, 0x60, 0xC0},  // 237 0xED φ
        {0x38, 0x60, 0xC0, 0xF8, 0xC0, 0x60, 0x38, 0x00},  // 238 0xEE ε
        {0x78, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0x00},  // 239 0xEF ∩
        {0x00, 0x7E, 0x00, 0x7E, 0x00, 0x7E, 0x00, 0x00},  // 240 0xF0 ≡
        {0x18, 0x18, 0x7E, 0x18, 0x18, 0x00, 0x7E, 0x00},  // 241 0xF1 ±
        {0x60, 0x30, 0x18, 0x30, 0x60, 0x00, 0xFC, 0x00},  // 242 0xF2 ≥
        {0x18, 0x30, 0x60, 0x30, 0x18, 0x00, 0xFC, 0x00},  // 243 0xF3 ≤
        {0x0E, 0x1B, 0x1B, 0x18, 0x18, 0x18, 0x18, 0x18},  // 244 0xF4 ⌠
        {0x18, 0x18, 0x18, 0x18, 0x18, 0xD8, 0xD8, 0x70},  // 245 0xF5 ⌡
        {0x18, 0x18, 0x00, 0x7E, 0x00, 0x18, 0x18, 0x00},  // 246 0xF6 ÷
        {0x00, 0x76, 0xDC, 0x00, 0x76, 0xDC, 0x00, 0x00},  // 247 0xF7 ≈
        {0x38, 0x6C, 0x6C, 0x38, 0x00, 0x00, 0x00, 0x00},  // 248 0xF8 °
        {0x00, 0x00, 0x00, 0x18, 0x18, 0x00, 0x00, 0x00},  // 249 0xF9 ∙
        {0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00},  // 250 0xFA ·
        {0x0F, 0x0C, 0x0C, 0x0C, 0xEC, 0x6C, 0x3C, 0x1C},  // 251 0xFB √
        {0x58, 0x6C, 0x6C, 0x6C, 0x6C, 0x00, 0x00, 0x00},  // 252 0xFC ⁿ
        {0x70, 0x98, 0x30, 0x60, 0xF8, 0x00, 0x00, 0x00},  // 253 0xFD ²
        {0x00, 0x00, 0x3C, 0x3C, 0x3C, 0x3C, 0x00, 0x00},  // 254 0xFE ■
        {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}}; // 255 0xFF NBSP
_Static_assert(sizeof(g_8x8_font) == 256 * 8, "g_8x16_font must be 2048 bytes");